{"version":3,"sources":["app/DirectRpcHandler.ts"],"names":[],"mappings":"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","file":"DirectRpcHandler.js","sourcesContent":["import * as http from 'http';\r\n\r\nimport * as express from 'express';\r\nimport * as bodyParser from 'body-parser';\r\n\r\nimport { injectable, inject, IDependencyContainer, Guard, Exception, Types as CmT } from 'back-lib-common-util';\r\n\r\nimport * as rpc from './RpcCommon';\r\n\r\n\r\nexport interface ExpressRpcHandlerInitOptions {\r\n\texpressApp: express.Express;\r\n\texpressRouter: express.Router;\r\n}\r\n\r\nexport interface IDirectRpcHandler extends rpc.IRpcHandler {\r\n\t/**\r\n\t * Http ports to listen\r\n\t */\r\n\tport: number;\r\n\r\n\t/**\r\n\t * @override\r\n\t * @see IRpcHandler.init\r\n\t */\r\n\tinit(params?: ExpressRpcHandlerInitOptions): void;\r\n\r\n\t/**\r\n\t * @override IRpcHandler.handle to return void.\r\n\t */\r\n\thandle(actions: string | string[], dependencyIdentifier: string | symbol, actionFactory?: rpc.RpcActionFactory): void;\r\n}\r\n\r\n@injectable()\r\nexport class ExpressRpcHandler\r\n\t\t\textends rpc.RpcHandlerBase\r\n\t\t\timplements IDirectRpcHandler {\r\n\r\n\tprivate static URL_TESTER: RegExp = (function() {\r\n\t\t\tlet regexp = new RegExp(/^[a-zA-Z0-9_-]*$/);\r\n\t\t\tregexp.compile();\r\n\t\t\treturn regexp;\r\n\t\t})();\r\n\r\n\tpublic port: number;\r\n\r\n\tprivate _server: http.Server;\r\n\tprivate _app: express.Express;\r\n\tprivate _router: express.Router;\r\n\r\n\r\n\tconstructor(\r\n\t\t@inject(CmT.DEPENDENCY_CONTAINER) depContainer: IDependencyContainer\r\n\t) {\r\n\t\tsuper(depContainer);\r\n\t\tthis.port = 30000;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @see IDirectRpcHandler.init\r\n\t */\r\n\tpublic init(param?: ExpressRpcHandlerInitOptions): void {\r\n\t\tGuard.assertIsFalsey(this._router, 'This RPC Caller is already initialized!');\r\n\t\tGuard.assertIsTruthy(this.name, '`name` property must be set!');\r\n\r\n\t\tlet app: express.Express;\r\n\t\tapp = this._app = (param && param.expressApp) \r\n\t\t\t? param.expressApp \r\n\t\t\t: express();\r\n\r\n\t\tthis._router = (param && param.expressRouter) ? param.expressRouter : express.Router();\r\n\t\t//app.use(bodyParser.urlencoded({extended: true})); // Parse Form values in POST request, but I don't think we need it in this case.\r\n\t\tapp.use(bodyParser.json()); // Parse JSON in POST request\r\n\t\tapp.use(`/${this.name}`, this._router);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * @see IRpcHandler.start\r\n\t */\r\n\tpublic start(): Promise<void> {\r\n\t\treturn new Promise<void>(resolve => {\r\n\t\t\tthis._server = this._app.listen(this.port, resolve);\r\n\t\t\tthis._server.on('error', err => this.emitError(err));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @see IRpcHandler.dispose\r\n\t */\r\n\tpublic dispose(): Promise<void> {\r\n\t\treturn new Promise<void>((resolve, reject) => {\r\n\t\t\tthis._server.close(() => {\r\n\t\t\t\tthis._server = null;\r\n\t\t\t\tresolve();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @see IRpcHandler.handle\r\n\t */\r\n\tpublic handle(actions: string | string[], dependencyIdentifier: string | symbol, actionFactory?: rpc.RpcActionFactory): void {\r\n\t\tGuard.assertIsDefined(this._router, '`init` method must be called first!');\r\n\t\t\r\n\t\tactions = Array.isArray(actions) ? actions : [actions];\r\n\t\t\r\n\t\tfor (let a of actions) {\r\n\t\t\tGuard.assertIsMatch(ExpressRpcHandler.URL_TESTER, a, `Route \"${a}\" is not URL-safe!`);\r\n\t\t\tthis._router.post(`/${a}`, this.buildHandleFunc(a, dependencyIdentifier, actionFactory));\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprivate buildHandleFunc(action: string, dependencyIdentifier: string | symbol, actionFactory?: rpc.RpcActionFactory): express.RequestHandler {\r\n\t\treturn (req: express.Request, res: express.Response) => {\r\n\t\t\tlet request: rpc.IRpcRequest = req.body;\r\n\r\n\t\t\t(new Promise((resolve, reject) => {\r\n\t\t\t\tlet actionFn = this.resolveActionFunc(action, dependencyIdentifier, actionFactory);\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Execute controller's action\r\n\t\t\t\t\tlet output: any = actionFn(request.payload, resolve, reject, request);\r\n\t\t\t\t\tif (output instanceof Promise) {\r\n\t\t\t\t\t\toutput.catch(reject); // Catch async exceptions.\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) { // Catch normal exceptions.\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\t\t\t.then(result => {\r\n\t\t\t\tres.status(200).send(this.createResponse(true, result, request.from));\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tlet errMsg = error,\r\n\t\t\t\t\tstatusCode = 200;\r\n\r\n\t\t\t\t// If error is an uncaught Exception/Error object, that means the action method\r\n\t\t\t\t// has a problem. We should response with error status code.\r\n\t\t\t\tif (error instanceof Error) {\r\n\t\t\t\t\t// Clone to a plain object, as class Error has problem\r\n\t\t\t\t\t// with JSON.stringify.\r\n\t\t\t\t\terrMsg = {\r\n\t\t\t\t\t\tmessage: error.message\r\n\t\t\t\t\t};\r\n\t\t\t\t\tstatusCode = 500;\r\n\t\t\t\t} else if (error instanceof Exception) {\r\n\t\t\t\t\t// TODO: Should log this unexpected error.\r\n\t\t\t\t\tstatusCode = 500;\r\n\t\t\t\t\tdelete error.stack;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If this is a reject error, which means the action method sends this error\r\n\t\t\t\t// back to caller on purpose.\r\n\t\t\t\tres.status(statusCode).send(this.createResponse(false, errMsg, request.from));\r\n\t\t\t});\r\n\t\t};\r\n\t}\r\n}"]}